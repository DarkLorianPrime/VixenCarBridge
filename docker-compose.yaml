version: "3.10"

x-rabbit-env: &x-rabbit-env
  RABBITMQ_DEFAULT_USER: ${RABBIT_USER}
  RABBITMQ_DEFAULT_PASS: ${RABBIT_PASSWORD}

x-postgres-env: &x-postgres-env
  POSTGRES_USER: ${POSTGRES_USER}
  POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
  POSTGRES_HOST: ${POSTGRES_HOST}
  POSTGRES_NAME: ${POSTGRES_NAME}

x-minio-env: &x-minio-env
  MINIO_ROOT_USER: ${MINIO_USER}
  MINIO_ROOT_PASSWORD: ${MINIO_PASSWORD}

# Containers:
# Backend - ✅
# Nginx - ✅
# Postgresql - ✅
# RabbitMQ bitnami/rabbitmq - ✅
# MinIO minio/minio - ✅
# Data checker - ❌
# BRUGES - ❌
#   Запуск событий по времени

services:
  backend:
    depends_on:
      - minio
      - database
      - rabbit
    build: containers/backend
    environment:
      <<: [ *x-postgres-env, *x-minio-env, *x-rabbit-env ]

    command: uvicorn main:app --host=0.0.0.0 --port=8000
    volumes:
      - "./containers/backend/app:/application"

  rabbit:
    image: bitnami/rabbitmq
    environment:
      <<: [ *x-rabbit-env ]
      RABBITMQ_MANAGEMENT_ALLOW_WEB_ACCESS: true
    volumes:
      - rabbit-data:/var/lib/rabbitmq

  minio:
    image: minio/minio
    environment:
      <<: [ *x-minio-env ]
    volumes:
      - minio-data:/export
    command: minio server /export --console-address ":9090"

  nginx:
    depends_on:
      - backend
      - minio
      - database
      - rabbit
    restart: always
    image: nginx:latest
    volumes:
      - "./nginx.conf:/etc/nginx/conf.d/nginx.conf:ro"
    ports:
      - "80:80"
      - "443:443"

  database:
    restart: always
    image: postgres:alpine
    volumes:
      - postgres-data:/var/lib/postgresql/data
    environment:
      <<: [ *x-postgres-env ]

networks:
  rabbit-network:
  minio-network:
  sql-network:
  logic-network:


volumes:
  rabbit-data:
  minio-data:
  postgres-data: